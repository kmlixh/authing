---
description: 
globs: 
alwaysApply: true
---
基础规约：
此项目是基于golang的一个鉴权相关的工具项目，使用基于内存缓存+redis缓存+数据库配置的三级缓存来快速响应。http相关的操作使用的是Fiber，
数据库操作使用的github.com/kmlixh/gom/v4@v4.6.3. 查询框架功能请用go doc

功能目标：
当请求进入之后，获取token，访问redis确认token有效性，获取用户信息。用户登陆时会在redis缓存用户信息，缓存用户角色和权限信息。工程内部维护多个map，用于缓存用户角色、用户的权限，角色的权限。
1.建立权限规则表，包含：权限id，权限名称、权限路由（可以正则模糊匹配）、权限是否启用、创建时间、更新时间、失效时间（可以为空）。
2.建立角色表，包含：角色id，角色名称，角色类型（user\admin）、是否启用、创建时间、更新时间。
3.角色权限表，包含，id，角色id，权限id，角色名称、权限名称、创建时间、更新时间。
4.用户角色表，用户和角色关联表，请设计相关表结构。
5.用户权限表，可以给指定用户设置指定权限，权限具有有效截止日，设计此表。
6.路由黑白名单表（指定路由是否可以匿名访问或者可以访问的IP地址）

帮我设计上述表、并给出建表语句。然后实现下面功能：
创建一个对象，允许传入redis连接配置和数据库配置进行初始化。此对象具备：
1.从redis校验用户token是否有效的功能。redis中以user_token_+xxx（xxx为从fiber请求头中取得的token）
2.基于1中获取到的用户信息，校验用户是否具有某个路由的访问权限，从三级缓存中获取用户权限。
3.完成上述各表的增删改查逻辑方法；
4.用户登陆成功后，调用某个方法，缓存用户的权限信息。